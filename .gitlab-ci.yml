variables:
  DOCKER_DRIVER: overlay2

stages:
  - checks
  - tests
  - functional_tests
  - build_dev
  - prepare_release
  - release

security_checks:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  before_script:
    - apk update && apk add --no-cache bash
    - curl -sS https://get.symfony.com/cli/installer | bash
    - mv /root/.symfony5/bin/symfony /usr/local/bin/symfony
  script:
    - symfony check:security

static_analysis:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  before_script:
    - echo 'memory_limit = -1' >> $PHP_INI_DIR/conf.d/memory_limit_php.ini
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run lint:php
    - composer run phpstan
    - composer run lint:composer

lint_dockerfile:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: hadolint/hadolint:latest-alpine
  script:
    - hadolint -f gitlab_codeclimate Dockerfile > hadolint-code-climate.json
  artifacts:
    name: "$CI_JOB_NAME hadolint artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "hadolint-code-climate.json"

openapi_diff:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - OPENCAL_VERSION=dev php bin/console api:openapi:export -y -o openapi-temp.yml
    - php bin/console lint:yaml openapi.yml && php bin/console lint:yaml openapi-temp.yml
    - diff openapi.yml openapi-temp.yml

unit_tests:
  needs:
    - security_checks
    - lint_dockerfile
    - openapi_diff
    - static_analysis
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run tests:unit:ci
  artifacts:
    when: always
    reports:
      junit: tests/reports/junit-unittests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/reports/cobertura.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

infection:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  needs:
    - security_checks
    - lint_dockerfile
    - openapi_diff
    - static_analysis
  stage: tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run infection
  artifacts:
    name: "$CI_JOB_NAME infection artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "tests/reports/infection-gitlab-code-quality.json"

api_tests:
  needs:
    - unit_tests
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: functional_tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  services:
    - name: mysql:8.2
      alias: database
  variables:
    MYSQL_HOST: database
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: symfony
    MYSQL_PASSWORD: symfony
    MYSQL_DATABASE: symfony_test
    XDEBUG_MODE: off
    OPENCAL_VERSION: dev
  before_script:
    - apk update && apk add --no-cache bash mariadb-client
#    - echo "SET GLOBAL sql_mode = '';" | mysql -h database -u root -p${MYSQL_ROOT_PASSWORD} --skip-ssl
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - php bin/console lexik:jwt:generate-keypair --overwrite -n
    - php bin/console doctrine:migrations:migrate -n
    - php bin/console doctrine:fixtures:load -n
    - composer run tests:api:ci
  artifacts:
    when: always
    reports:
      junit: tests/reports/junit-apitests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/reports/cobertura-api.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

build_dev:
  needs:
    - api_tests
    - unit_tests
  only:
    - main
  stage: build_dev
  image: jdrouet/docker-with-buildx:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
    - docker pull opencal/backend:dev-latest || true
    - docker buildx build --platform linux/amd64,linux/arm64 --target php --tag git.var-lab.com:5050/opencal/backend:dev-latest --cache-from git.var-lab.com:5050/opencal/backend:dev-latest --push .
    - docker buildx build --platform linux/amd64,linux/arm64 --target nginx --tag git.var-lab.com:5050/opencal/backend:dev-nginx-latest --cache-from git.var-lab.com:5050/opencal/backend:dev-latest --push .


prepare_release:
  stage: prepare_release
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
  artifacts:
    paths:
      - release_notes.md

release:
  stage: release
  image: jdrouet/docker-with-buildx:stable
  needs:
    - job: prepare_release
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  services:
    - docker:dind
  variables:
    OPENCAL_VERSION: "$CI_COMMIT_TAG"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
    - |
      HIGHEST_TAG=$(git tag | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | \
        sed 's/^v//' | sort -V | tail -n1)
      CURRENT_TAG=$(echo "$CI_COMMIT_TAG" | sed 's/^v//')

      if [ "$CURRENT_TAG" = "$HIGHEST_TAG" ]; then
        docker buildx build --platform linux/amd64,linux/arm64 \
          --target php \
          --tag git.var-lab.com:5050/opencal/backend:$CI_COMMIT_TAG \
          --tag git.var-lab.com:5050/opencal/backend:latest \
          --push .

        docker buildx build --platform linux/amd64,linux/arm64 \
          --target nginx \
          --tag git.var-lab.com:5050/opencal/backend:nginx-$CI_COMMIT_TAG \
          --tag git.var-lab.com:5050/opencal/backend:nginx-latest \
          --push .
      else
        docker buildx build --platform linux/amd64,linux/arm64 \
          --target php \
          --tag git.var-lab.com:5050/opencal/backend:$CI_COMMIT_TAG \
          --push .

        docker buildx build --platform linux/amd64,linux/arm64 \
          --target nginx \
          --tag git.var-lab.com:5050/opencal/backend:nginx-$CI_COMMIT_TAG \
          --push .
      fi
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: "$(cat release_notes.md)"
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
