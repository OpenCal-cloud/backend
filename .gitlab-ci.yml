variables:
  DOCKER_DRIVER: overlay2

stages:
  - pre
  - checks
  - tests
  - functional_tests
  - build_dev
  - prepare_release
  - release

commit_message_check:
  stage: pre
  image: alpine:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  before_script:
    - apk add --no-cache git grep bash
  script:
    - bash ./ci/check_commit_message.sh

shellcheck:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: registry.gitlab.com/pipeline-components/shellcheck:latest
  script:
    - |
      find . -name .git -type d -prune -o -type f  -regex '.*/[^.]*$'   -print0 |
      xargs -0 -P $(nproc) -r -n1 sh -c 'FILE="$0"; if head -n1 "$FILE" |grep -q "^#\\! \?/.\+\(ba|d|k\)\?sh" ; then shellcheck "$FILE" ; else /bin/true ; fi '

security_checks:
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - commit_message_check
  before_script:
    - apk update && apk add --no-cache bash curl jq
    - curl -sS https://get.symfony.com/cli/installer | bash
    - mv /root/.symfony5/bin/symfony /usr/local/bin/symfony
  script:
    - symfony check:security | tee security_check_output.txt
  after_script:
    - |
      if [ "$CI_JOB_STATUS" != "success" ]; then
        echo "Security check failed â€“ creating issue..."

        # Read and escape output
        ESCAPED_OUTPUT=$(jq -Rs < security_check_output.txt)

        curl --request POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/issues" \
          --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" \
          --header "Content-Type: application/json" \
          --data "{
            \"title\": \"[Security Check] Job failed in pipeline #$CI_PIPELINE_ID\",
            \"description\": \"### Job \`$CI_JOB_NAME\` failed on branch \`$CI_COMMIT_REF_NAME\`\\n\\nPipeline: $CI_PIPELINE_URL\\n\\n#### Symfony Security Checker Output:\\n\`\`\`\\n${ESCAPED_OUTPUT}\\n\`\`\`\",
            \"labels\": \"ci,security\"
          }"
      fi
  artifacts:
    when: always
    paths:
      - security_check_output.txt
    expire_in: 1 day

static_analysis:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  needs:
    - commit_message_check
  before_script:
    - echo 'memory_limit = -1' >> $PHP_INI_DIR/conf.d/memory_limit_php.ini
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run lint:php
    - composer run phpstan
    - composer run lint:composer

lint_dockerfile:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: hadolint/hadolint:latest-alpine
  needs:
    - commit_message_check
  script:
    - hadolint -f gitlab_codeclimate Dockerfile > hadolint-code-climate.json
  artifacts:
    name: "$CI_JOB_NAME hadolint artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "hadolint-code-climate.json"

openapi_diff:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: checks
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  needs:
    - commit_message_check
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - OPENCAL_VERSION=dev php bin/console api:openapi:export -y -o openapi-temp.yml
    - php bin/console lint:yaml openapi.yml && php bin/console lint:yaml openapi-temp.yml
    - diff openapi.yml openapi-temp.yml

unit_tests:
  needs:
    - security_checks
    - lint_dockerfile
    - openapi_diff
    - static_analysis
    - shellcheck
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run tests:unit:ci
  artifacts:
    when: always
    reports:
      junit: tests/reports/junit-unittests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/reports/cobertura.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

infection:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  needs:
    - security_checks
    - lint_dockerfile
    - openapi_diff
    - static_analysis
    - shellcheck
  stage: tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - composer run infection
  artifacts:
    name: "$CI_JOB_NAME infection artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "tests/reports/infection-gitlab-code-quality.json"



integration_tests:
  needs:
    - unit_tests
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: functional_tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  services:
    - name: mysql:8.2
      alias: database
  variables:
    MYSQL_HOST: database
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: symfony
    MYSQL_PASSWORD: symfony
    MYSQL_DATABASE: symfony_test
    XDEBUG_MODE: off
    OPENCAL_VERSION: dev
  before_script:
    - apk update && apk add --no-cache bash mariadb-client
  #    - echo "SET GLOBAL sql_mode = '';" | mysql -h database -u root -p${MYSQL_ROOT_PASSWORD} --skip-ssl
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - php bin/console lexik:jwt:generate-keypair --overwrite -n
    - php bin/console doctrine:migrations:migrate -n
    - php bin/console doctrine:fixtures:load -n
    - composer run tests:integration
  artifacts:
    when: always
    reports:
      junit: tests/reports/junit-apitests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/reports/cobertura-api.xml

api_tests:
  needs:
    - unit_tests
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
  stage: functional_tests
  image: git.var-lab.com:5050/opencal/docker-ci-image:latest
  services:
    - name: mysql:8.2
      alias: database
  variables:
    MYSQL_HOST: database
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: symfony
    MYSQL_PASSWORD: symfony
    MYSQL_DATABASE: symfony_test
    XDEBUG_MODE: off
    OPENCAL_VERSION: dev
  before_script:
    - apk update && apk add --no-cache bash mariadb-client
#    - echo "SET GLOBAL sql_mode = '';" | mysql -h database -u root -p${MYSQL_ROOT_PASSWORD} --skip-ssl
  script:
    - composer install --prefer-dist --no-interaction --no-progress
    - php bin/console lexik:jwt:generate-keypair --overwrite -n
    - php bin/console doctrine:migrations:migrate -n
    - php bin/console doctrine:fixtures:load -n
    - composer run tests:api:ci
  artifacts:
    when: always
    reports:
      junit: tests/reports/junit-apitests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/reports/cobertura-api.xml
#  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

build_dev_mr:
  needs:
    - unit_tests
    - integration_tests
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  stage: build_dev
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --target php --cache-from git.var-lab.com:5050/opencal/backend:dev-latest .

build_dev_main:
  needs:
    - api_tests
    - unit_tests
    - infection
    - integration_tests
  only:
    - main
  stage: build_dev
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --target php --tag git.var-lab.com:5050/opencal/backend:dev-latest --cache-from git.var-lab.com:5050/opencal/backend:dev-latest --push .


prepare_release:
  stage: prepare_release
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - apk add curl jq git
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
    - git clone https://oauth2:$OPENCAL_PUSH_RELEASE_NOTES_ACCESS_TOKEN@git.var-lab.com/opencal/documentation.git documentation
    - mv release_notes.md "documentation/docs/changelog/api/$CI_COMMIT_TAG.md"
    - cd documentation
    - git checkout -b "add_changelog_$CI_COMMIT_TAG"
    - git add "docs/changelog/backend/$CI_COMMIT_TAG.md"
    - git commit -m "add changelog file docs/changelog/backend/$CI_COMMIT_TAG.md"
    - git push -u origin "add_changelog_$CI_COMMIT_TAG"
  artifacts:
    paths:
      - release_notes.md

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_release
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    OPENCAL_VERSION: "$CI_COMMIT_TAG"
  before_script:
    - apk add --no-cache git curl bash docker
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - bash ./ci/release.sh
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: "$(cat release_notes.md)"
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
