openapi: 3.1.0
info:
  title: 'OpenCal API'
  description: ''
  version: dev
servers:
  -
    url: /
    description: ''
paths:
  /availabilities:
    get:
      operationId: api_availabilities_get_collection
      tags:
        - Availability
      responses:
        '200':
          description: 'Availability collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-availabilities.read'
            application/ld+json:
              schema:
                type: object
                description: 'Availability.jsonld-availabilities.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-availabilities.read' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: dayOfWeek
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'dayOfWeek[]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
    post:
      operationId: api_availabilities_post
      tags:
        - Availability
      responses:
        '201':
          description: 'Availability resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-availabilities.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-availabilities.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Creates a Availability resource.'
      description: 'Creates a Availability resource.'
      parameters: []
      requestBody:
        description: 'The new Availability resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability-availabilities.write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld-availabilities.write'
        required: true
  '/availabilities/{id}':
    get:
      operationId: api_availabilities_id_get
      tags:
        - Availability
      responses:
        '200':
          description: 'Availability resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-availabilities.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-availabilities.read'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    delete:
      operationId: api_availabilities_id_delete
      tags:
        - Availability
      responses:
        '204':
          description: 'Availability resource deleted'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Availability resource.'
      description: 'Removes the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    patch:
      operationId: api_availabilities_id_patch
      tags:
        - Availability
      responses:
        '200':
          description: 'Availability resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-availabilities.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-availabilities.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Availability resource.'
      description: 'Updates the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Availability-availabilities.write'
        required: true
  /availability_check/day:
    get:
      operationId: api_availability_checkday_get_collection
      tags:
        - Availability
      responses:
        '200':
          description: 'Availability collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-availability.read'
            application/ld+json:
              schema:
                type: object
                description: 'Availability.jsonld-availability.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-availability.read' } } } }
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: event_type_id
          in: query
          description: 'Availability event_type_id'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: date
          in: query
          description: 'Availability date'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: email
          in: query
          description: 'Availability email'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
  /availability_check/month:
    get:
      operationId: api_availability_checkmonth_get_collection
      tags:
        - Availability
      responses:
        '200':
          description: 'Availability collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-availability.read'
            application/ld+json:
              schema:
                type: object
                description: 'Availability.jsonld-availability.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-availability.read' } } } }
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: event_type_id
          in: query
          description: 'Availability event_type_id'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: date
          in: query
          description: 'Availability date'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: email
          in: query
          description: 'Availability email'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
  /cal_dav_auths:
    get:
      operationId: api_cal_dav_auths_get_collection
      tags:
        - CalDavAuth
      responses:
        '200':
          description: 'CalDavAuth collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.read'
            application/ld+json:
              schema:
                type: object
                description: 'CalDavAuth.jsonld-cal-dav-auth.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/CalDavAuth.jsonld-cal-dav-auth.read' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of CalDavAuth resources.'
      description: 'Retrieves the collection of CalDavAuth resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
    post:
      operationId: api_cal_dav_auths_post
      tags:
        - CalDavAuth
      responses:
        '201':
          description: 'CalDavAuth resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CalDavAuth.jsonld-cal-dav-auth.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Creates a CalDavAuth resource.'
      description: 'Creates a CalDavAuth resource.'
      parameters: []
      requestBody:
        description: 'The new CalDavAuth resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CalDavAuth.jsonld-cal-dav-auth.write'
        required: true
  '/cal_dav_auths/{id}':
    get:
      operationId: api_cal_dav_auths_id_get
      tags:
        - CalDavAuth
      responses:
        '200':
          description: 'CalDavAuth resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CalDavAuth.jsonld-cal-dav-auth.read'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a CalDavAuth resource.'
      description: 'Retrieves a CalDavAuth resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CalDavAuth identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    delete:
      operationId: api_cal_dav_auths_id_delete
      tags:
        - CalDavAuth
      responses:
        '204':
          description: 'CalDavAuth resource deleted'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the CalDavAuth resource.'
      description: 'Removes the CalDavAuth resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CalDavAuth identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    patch:
      operationId: api_cal_dav_auths_id_patch
      tags:
        - CalDavAuth
      responses:
        '200':
          description: 'CalDavAuth resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CalDavAuth.jsonld-cal-dav-auth.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the CalDavAuth resource.'
      description: 'Updates the CalDavAuth resource.'
      parameters:
        -
          name: id
          in: path
          description: 'CalDavAuth identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The updated CalDavAuth resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CalDavAuth-cal-dav-auth.write'
        required: true
  /cal_dav_sync_logs:
    get:
      operationId: api_cal_dav_sync_logs_get_collection
      tags:
        - CalDavSyncLog
      responses:
        '200':
          description: 'CalDavSyncLog collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalDavSyncLog-log.read'
            application/ld+json:
              schema:
                type: object
                description: 'CalDavSyncLog.jsonld-log.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/CalDavSyncLog.jsonld-log.read' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of CalDavSyncLog resources.'
      description: 'Retrieves the collection of CalDavSyncLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: calDavAuth.id
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: integer
          style: form
          explode: false
        -
          name: 'calDavAuth.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'createdAt[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'createdAt[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'createdAt[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'createdAt[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: failed
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: boolean
          style: form
          explode: false
  '/events/{id}/cancel':
    post:
      operationId: api_events_idcancel_post
      tags:
        - CancelEvent
      responses:
        '201':
          description: 'CancelEvent resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEvent'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CancelEvent.jsonld'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
      summary: 'Creates a CancelEvent resource.'
      description: 'Cancels a specific event. Requires a valid cancellationHash to authorize the cancellation.'
      parameters:
        -
          name: id
          in: path
          description: 'CancelEvent identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The cancellation hash'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelEvent'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CancelEvent.jsonld'
        required: false
  /events:
    get:
      operationId: api_events_get_collection
      tags:
        - Event
      responses:
        '200':
          description: 'Event collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event-event.read'
            application/ld+json:
              schema:
                type: object
                description: 'Event.jsonld-event.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/Event.jsonld-event.read' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of Event resources.'
      description: 'Retrieves the collection of Event resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
    post:
      operationId: api_events_post
      tags:
        - Event
      responses:
        '201':
          description: 'Event resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event-event.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld-event.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
      summary: 'Creates a Event resource.'
      description: 'Creates a Event resource.'
      parameters: []
      requestBody:
        description: 'The new Event resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event-event.write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event.jsonld-event.write'
        required: true
  '/events/{id}':
    get:
      operationId: api_events_id_get
      tags:
        - Event
      responses:
        '200':
          description: 'Event resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event-event.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld-event.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Event resource.'
      description: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    delete:
      operationId: api_events_id_delete
      tags:
        - Event
      responses:
        '204':
          description: 'Event resource deleted'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Event resource.'
      description: 'Removes the Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    patch:
      operationId: api_events_id_patch
      tags:
        - Event
      responses:
        '200':
          description: 'Event resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event-event.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld-event.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Event resource.'
      description: 'Updates the Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The updated Event resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Event-event.write'
        required: true
  /event_types:
    get:
      operationId: api_event_types_get_collection
      tags:
        - EventType
      responses:
        '200':
          description: 'EventType collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType-event_type.read'
            application/ld+json:
              schema:
                type: object
                description: 'EventType.jsonld-event_type.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/EventType.jsonld-event_type.read' } } } }
      summary: 'Retrieves the collection of EventType resources.'
      description: 'Retrieves the collection of EventType resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: host.email
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'host.email[]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slug
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: 'slug[]'
          in: query
          description: ''
          required: false
          deprecated: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
    post:
      operationId: api_event_types_post
      tags:
        - EventType
      responses:
        '201':
          description: 'EventType resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType-event_type.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EventType.jsonld-event_type.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Creates a EventType resource.'
      description: 'Creates a EventType resource.'
      parameters: []
      requestBody:
        description: 'The new EventType resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType-event_type.write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EventType.jsonld-event_type.write'
        required: true
  '/event_types/{id}':
    get:
      operationId: api_event_types_id_get
      tags:
        - EventType
      responses:
        '200':
          description: 'EventType resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType-event_type.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EventType.jsonld-event_type.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a EventType resource.'
      description: 'Retrieves a EventType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EventType identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    delete:
      operationId: api_event_types_id_delete
      tags:
        - EventType
      responses:
        '204':
          description: 'EventType resource deleted'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the EventType resource.'
      description: 'Removes the EventType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EventType identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
    patch:
      operationId: api_event_types_id_patch
      tags:
        - EventType
      responses:
        '200':
          description: 'EventType resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType-event_type.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EventType.jsonld-event_type.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the EventType resource.'
      description: 'Updates the EventType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'EventType identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The updated EventType resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/EventType-event_type.write'
        required: true
  /holidays:
    get:
      operationId: api_holidays_get_collection
      tags:
        - Holiday
      responses:
        '200':
          description: 'Holiday collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Holiday'
            application/ld+json:
              schema:
                type: object
                description: 'Holiday.jsonld collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/Holiday.jsonld' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of Holiday resources.'
      description: 'Retrieves the collection of Holiday resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
        -
          name: country
          in: query
          description: 'Holiday country'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
        -
          name: year
          in: query
          description: 'Holiday year'
          required: false
          deprecated: false
          schema:
            type: string
          style: form
          explode: false
  /auth:
    post:
      operationId: login_check_post
      tags:
        - 'Login Check'
      responses:
        '200':
          description: 'User token created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { readOnly: true, type: string, nullable: false }
                required:
                  - token
      summary: 'Creates a user token.'
      description: 'Creates a user token.'
      requestBody:
        description: 'The login data'
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  nullable: false
                password:
                  type: string
                  nullable: false
              required:
                - email
                - password
        required: true
  /meeting_providers:
    get:
      operationId: api_meeting_providers_get_collection
      tags:
        - MeetingProvider
      responses:
        '200':
          description: 'MeetingProvider collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingProvider-meeting_provider.read'
            application/ld+json:
              schema:
                type: object
                description: 'MeetingProvider.jsonld-meeting_provider.read collection.'
                allOf:
                  - { $ref: '#/components/schemas/HydraCollectionBaseSchema' }
                  - { type: object, properties: { member: { type: array, items: { $ref: '#/components/schemas/MeetingProvider.jsonld-meeting_provider.read' } } } }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves the collection of MeetingProvider resources.'
      description: 'Retrieves the collection of MeetingProvider resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          schema:
            type: integer
            default: 1
          style: form
          explode: false
  /password/request:
    post:
      operationId: api_passwordrequest_post
      tags:
        - RequestPassword
      responses:
        '204':
          description: 'No content. Password reset request accepted.'
        '201':
          description: 'RequestPassword resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPassword'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestPassword.jsonld'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
      summary: 'Creates a RequestPassword resource.'
      description: 'Creates a RequestPassword resource.'
      parameters: []
      requestBody:
        description: 'The new RequestPassword resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPassword'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestPassword.jsonld'
        required: true
  /password/reset:
    post:
      operationId: api_passwordreset_post
      tags:
        - ResetPassword
      responses:
        '204':
          description: 'No content. Password reset is done.'
        '201':
          description: 'ResetPassword resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ResetPassword.jsonld'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
      summary: 'Creates a ResetPassword resource.'
      description: 'Creates a ResetPassword resource.'
      parameters: []
      requestBody:
        description: 'The new ResetPassword resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ResetPassword.jsonld'
        required: true
  /me:
    get:
      operationId: api_me_get
      tags:
        - User
      responses:
        '200':
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-me.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-me.read'
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters: []
  '/me/{id}':
    patch:
      operationId: api_me_id_patch
      tags:
        - User
      responses:
        '200':
          description: 'User resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-me.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-me.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation'
          links: {  }
        '403':
          description: Forbidden
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-me.write'
        required: true
  '/users/{id}':
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        '200':
          description: 'User resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-me.read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-me.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          schema:
            type: string
          style: simple
          explode: false
components:
  schemas:
    Availability-availabilities.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        dayOfWeek:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    Availability-availabilities.write:
      type: object
      properties:
        dayOfWeek:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    Availability-availability.read:
      type: object
    Availability.jsonld-availabilities.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            dayOfWeek:
              type: string
            startTime:
              type: string
              format: date-time
            endTime:
              type: string
              format: date-time
    Availability.jsonld-availabilities.write:
      type: object
      properties:
        dayOfWeek:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    Availability.jsonld-availability.read:
      type: object
    CalDavAuth-cal-dav-auth.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        enabled:
          type: boolean
        baseUri:
          type: string
        username:
          type: string
        password:
          type: string
        syncedAt:
          type:
            - string
            - 'null'
          format: date-time
    CalDavAuth-cal-dav-auth.write:
      type: object
      properties:
        enabled:
          type: boolean
        baseUri:
          type: string
        username:
          type: string
        password:
          type: string
    CalDavAuth-log.read:
      type: object
      properties:
        baseUri:
          type: string
        username:
          type: string
    CalDavAuth.jsonld-cal-dav-auth.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            enabled:
              type: boolean
            baseUri:
              type: string
            username:
              type: string
            password:
              type: string
            syncedAt:
              type:
                - string
                - 'null'
              format: date-time
    CalDavAuth.jsonld-cal-dav-auth.write:
      type: object
      properties:
        enabled:
          type: boolean
        baseUri:
          type: string
        username:
          type: string
        password:
          type: string
    CalDavAuth.jsonld-log.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            baseUri:
              type: string
            username:
              type: string
    CalDavSyncLog-log.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        countItems:
          type: integer
        createdAt:
          type: string
          format: date-time
        failed:
          type: boolean
        calDavAuth:
          $ref: '#/components/schemas/CalDavAuth-log.read'
        errorDetails:
          type:
            - string
            - 'null'
        errorMessage:
          type:
            - string
            - 'null'
    CalDavSyncLog.jsonld-log.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        countItems:
          type: integer
        createdAt:
          type: string
          format: date-time
        failed:
          type: boolean
        calDavAuth:
          $ref: '#/components/schemas/CalDavAuth.jsonld-log.read'
        errorDetails:
          type:
            - string
            - 'null'
        errorMessage:
          type:
            - string
            - 'null'
    CancelEvent:
      type: object
      properties:
        cancellationHash:
          type: string
    CancelEvent.jsonld:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            cancellationHash:
              type: string
    ConstraintViolation:
      type: object
      description: 'Unprocessable entity'
      properties:
        status:
          default: 422
          type: integer
        violations:
          type: array
          items:
            type: object
            properties:
              propertyPath:
                type: string
                description: 'The property path of the violation'
              message:
                type: string
                description: 'The message associated with the violation'
        detail:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
        title:
          readOnly: true
          type:
            - string
            - 'null'
        instance:
          readOnly: true
          type:
            - string
            - 'null'
    ConstraintViolation.jsonld:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            status:
              default: 422
              type: integer
            violations:
              type: array
              items:
                type: object
                properties:
                  propertyPath: { type: string, description: 'The property path of the violation' }
                  message: { type: string, description: 'The message associated with the violation' }
            detail:
              readOnly: true
              type: string
            description:
              readOnly: true
              type: string
            type:
              readOnly: true
              type: string
            title:
              readOnly: true
              type:
                - string
                - 'null'
            instance:
              readOnly: true
              type:
                - string
                - 'null'
      description: 'Unprocessable entity'
    Error:
      type: object
      description: 'A representation of common errors.'
      properties:
        title:
          readOnly: true
          description: 'A short, human-readable summary of the problem.'
          type: string
        detail:
          readOnly: true
          description: 'A human-readable explanation specific to this occurrence of the problem.'
          type: string
        status:
          type: number
          examples:
            - 404
          default: 400
        instance:
          readOnly: true
          description: 'A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.'
          type:
            - string
            - 'null'
        type:
          readOnly: true
          description: 'A URI reference that identifies the problem type'
          type: string
    Error.jsonld:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            title:
              readOnly: true
              description: 'A short, human-readable summary of the problem.'
              type: string
            detail:
              readOnly: true
              description: 'A human-readable explanation specific to this occurrence of the problem.'
              type: string
            status:
              type: number
              examples:
                - 404
              default: 400
            instance:
              readOnly: true
              description: 'A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.'
              type:
                - string
                - 'null'
            type:
              readOnly: true
              description: 'A URI reference that identifies the problem type'
              type: string
            description:
              readOnly: true
              type:
                - string
                - 'null'
      description: 'A representation of common errors.'
    Event-event.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        eventType:
          anyOf:
            -
              $ref: '#/components/schemas/EventType-event.read'
            -
              type: 'null'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        day:
          type: string
          format: date-time
        participantName:
          type:
            - string
            - 'null'
        participantEmail:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type:
            - string
            - 'null'
        participantMessage:
          type:
            - string
            - 'null'
        cancellationHash:
          type:
            - string
            - 'null'
        meetingProviderIdentifier:
          type:
            - string
            - 'null'
        participationUrl:
          type:
            - string
            - 'null'
        cancelledByAttendee:
          readOnly: true
          type:
            - boolean
            - 'null'
      required:
        - eventType
        - startTime
        - endTime
        - participantName
        - participantEmail
    Event-event.write:
      type: object
      required:
        - eventType
        - startTime
        - endTime
        - participantName
        - participantEmail
      properties:
        eventType:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        day:
          type: string
          format: date-time
        participantName:
          type:
            - string
            - 'null'
        participantEmail:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type:
            - string
            - 'null'
        participantMessage:
          type:
            - string
            - 'null'
        meetingProviderIdentifier:
          type:
            - string
            - 'null'
    Event.jsonld-event.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            eventType:
              anyOf:
                -
                  $ref: '#/components/schemas/EventType.jsonld-event.read'
                -
                  type: 'null'
            startTime:
              type: string
              format: date-time
            endTime:
              type: string
              format: date-time
            day:
              type: string
              format: date-time
            participantName:
              type:
                - string
                - 'null'
            participantEmail:
              format: email
              externalDocs:
                url: 'https://schema.org/email'
              type:
                - string
                - 'null'
            participantMessage:
              type:
                - string
                - 'null'
            cancellationHash:
              type:
                - string
                - 'null'
            meetingProviderIdentifier:
              type:
                - string
                - 'null'
            participationUrl:
              type:
                - string
                - 'null'
            cancelledByAttendee:
              readOnly: true
              type:
                - boolean
                - 'null'
          required:
            - eventType
            - startTime
            - endTime
            - participantName
            - participantEmail
    Event.jsonld-event.write:
      type: object
      required:
        - eventType
        - startTime
        - endTime
        - participantName
        - participantEmail
      properties:
        eventType:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        day:
          type: string
          format: date-time
        participantName:
          type:
            - string
            - 'null'
        participantEmail:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type:
            - string
            - 'null'
        participantMessage:
          type:
            - string
            - 'null'
        meetingProviderIdentifier:
          type:
            - string
            - 'null'
    EventType-event.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        duration:
          minimum: 5
          type: integer
        slug:
          pattern: '^([a-z0-9-]+)$'
          type: string
      required:
        - name
        - duration
        - slug
    EventType-event_type.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        duration:
          minimum: 5
          type: integer
        slug:
          pattern: '^([a-z0-9-]+)$'
          type: string
        host:
          $ref: '#/components/schemas/User-event_type.read'
        meetingProviders:
          type: array
          items:
            $ref: '#/components/schemas/EventTypeMeetingProvider-event_type.read'
      required:
        - name
        - duration
        - slug
    EventType-event_type.write:
      type: object
      required:
        - name
        - duration
        - slug
      properties:
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        duration:
          minimum: 5
          type: integer
        slug:
          pattern: '^([a-z0-9-]+)$'
          type: string
        meetingProviderIdentifiers:
          type: array
          items:
            type: 'null'
    EventType.jsonld-event.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            name:
              type: string
            description:
              type:
                - string
                - 'null'
            duration:
              minimum: 5
              type: integer
            slug:
              pattern: '^([a-z0-9-]+)$'
              type: string
          required:
            - name
            - duration
            - slug
    EventType.jsonld-event_type.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            name:
              type: string
            description:
              type:
                - string
                - 'null'
            duration:
              minimum: 5
              type: integer
            slug:
              pattern: '^([a-z0-9-]+)$'
              type: string
            host:
              $ref: '#/components/schemas/User.jsonld-event_type.read'
            meetingProviders:
              type: array
              items:
                $ref: '#/components/schemas/EventTypeMeetingProvider.jsonld-event_type.read'
          required:
            - name
            - duration
            - slug
    EventType.jsonld-event_type.write:
      type: object
      required:
        - name
        - duration
        - slug
      properties:
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        duration:
          minimum: 5
          type: integer
        slug:
          pattern: '^([a-z0-9-]+)$'
          type: string
        meetingProviderIdentifiers:
          type: array
          items:
            type: 'null'
    EventTypeMeetingProvider-event_type.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        providerIdentifier:
          type: string
        enabled:
          type: boolean
        name:
          type: string
    EventTypeMeetingProvider.jsonld-event_type.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        providerIdentifier:
          type: string
        enabled:
          type: boolean
        name:
          type: string
    Holiday:
      type: object
      properties:
        country:
          type: string
        year:
          type: integer
        date:
          type: string
          format: date-time
        localName:
          type: string
        name:
          type: string
    Holiday.jsonld:
      type: object
      properties:
        country:
          type: string
        year:
          type: integer
        date:
          type: string
          format: date-time
        localName:
          type: string
        name:
          type: string
    HydraCollectionBaseSchema:
      type: object
      required:
        - member
      properties:
        member:
          type: array
        totalItems:
          type: integer
          minimum: 0
        view:
          type: object
          properties:
            '@id':
              type: string
              format: iri-reference
            '@type':
              type: string
            first:
              type: string
              format: iri-reference
            last:
              type: string
              format: iri-reference
            previous:
              type: string
              format: iri-reference
            next:
              type: string
              format: iri-reference
          example:
            '@id': string
            type: string
            first: string
            last: string
            previous: string
            next: string
        search:
          type: object
          properties:
            '@type':
              type: string
            template:
              type: string
            variableRepresentation:
              type: string
            mapping:
              type: array
              items:
                type: object
                properties:
                  '@type': { type: string }
                  variable: { type: string }
                  property: { type: [string, 'null'] }
                  required: { type: boolean }
    HydraItemBaseSchema:
      required:
        - '@id'
        - '@type'
      type: object
      properties:
        '@context':
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          type: string
        '@type':
          type: string
    MeetingProvider-meeting_provider.read:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        available:
          type: boolean
    MeetingProvider.jsonld-meeting_provider.read:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        available:
          type: boolean
    RequestPassword:
      type: object
      properties:
        email:
          type: string
    RequestPassword.jsonld:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            email:
              type: string
    ResetPassword:
      type: object
      properties:
        token:
          type: string
        email:
          type: string
        password:
          type: string
    ResetPassword.jsonld:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            token:
              type: string
            email:
              type: string
            password:
              type: string
    User-event_type.read:
      type: object
      required:
        - email
        - givenName
        - familyName
      properties:
        email:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type: string
        givenName:
          type: string
        familyName:
          type: string
    User-me.read:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        email:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type: string
        roles:
          type: array
          items:
            type: string
        givenName:
          type: string
        familyName:
          type: string
      required:
        - email
        - givenName
        - familyName
    User-me.write:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
        email:
          format: email
          externalDocs:
            url: 'https://schema.org/email'
          type: string
        givenName:
          type: string
        familyName:
          type: string
      required:
        - email
        - givenName
        - familyName
    User.jsonld-event_type.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          required:
            - email
            - givenName
            - familyName
          properties:
            email:
              format: email
              externalDocs:
                url: 'https://schema.org/email'
              type: string
            givenName:
              type: string
            familyName:
              type: string
    User.jsonld-me.read:
      allOf:
        -
          $ref: '#/components/schemas/HydraItemBaseSchema'
        -
          type: object
          properties:
            id:
              readOnly: true
              type: integer
            email:
              format: email
              externalDocs:
                url: 'https://schema.org/email'
              type: string
            roles:
              type: array
              items:
                type: string
            givenName:
              type: string
            familyName:
              type: string
          required:
            - email
            - givenName
            - familyName
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  -
    JWT: []
tags:
  -
    name: Availability
    description: "Resource 'Availability' operations."
  -
    name: CancelEvent
    description: "Resource 'CancelEvent' operations."
  -
    name: Holiday
    description: "Resource 'Holiday' operations."
  -
    name: MeetingProvider
    description: "Resource 'MeetingProvider' operations."
  -
    name: RequestPassword
    description: "Resource 'RequestPassword' operations."
  -
    name: ResetPassword
    description: "Resource 'ResetPassword' operations."
  -
    name: CalDavAuth
    description: "Resource 'CalDavAuth' operations."
  -
    name: CalDavSyncLog
    description: "Resource 'CalDavSyncLog' operations."
  -
    name: Event
    description: "Resource 'Event' operations."
  -
    name: EventType
    description: "Resource 'EventType' operations."
  -
    name: User
    description: "Resource 'User' operations."
webhooks: {  }
